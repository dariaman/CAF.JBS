@using NonFactors.Mvc.Grid;
@model CAF.JBS.ViewModels.SubmitUploadVM

@{
    ViewData["Title"] = "Data Upload Billing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Upload Data @Model.trancode</h2><br />

<b>
    <i>
        <p class="text-danger">
            @{
                if (TempData["terimaError"] != null)
                {
                    var pesan = (string)TempData["terimaError"];
                    @pesan <br />
                }
            }
        </p>
    </i>
</b>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th class="bg-primary" colspan="3" rowspan="2" style="text-align:center; vertical-align:middle">Data Download</th>
            <th class="bg-primary" colspan="12" style="text-align:center; vertical-align:middle">Data Upload</th>
        </tr>
        <tr>
            <th class="bg-primary" colspan="3" style="text-align:center; vertical-align:middle">Summary Upload</th>
            <th class="bg-primary" colspan="3" style="text-align:center; vertical-align:middle">Data Reject</th>
            <th class="bg-primary" colspan="3" style="text-align:center; vertical-align:middle">Data Approve</th>
        </tr>
        <tr>
            <th class="bg-success">Jenis Tagihan</th>
            <th>Jumlah</th>
            <th>Nilai</th>

            <th class="bg-success">Jenis Tagihan</th>
            <th>Jumlah</th>
            <th>Nilai</th>

            <th class="bg-success">Jenis Tagihan</th>
            <th>Jumlah</th>
            <th>Nilai</th>

            <th class="bg-success">Jenis Tagihan</th>
            <th>Jumlah</th>
            <th>Nilai</th>
        </tr>
        <tr>
            <td class="bg-success">Recurring</td>
            <td align="right">@string.Format("{0:N0}", Model.BCountDw)</td>
            <td align="right">@string.Format("{0:N0}", Model.BSumDw)</td>

            <td class="bg-success">Recurring</td>
            <td align="right">@string.Format("{0:N0}", Model.BCountUp)</td>
            <td align="right">@string.Format("{0:N0}", Model.BSumUp)</td>

            <td class="bg-success">Recurring</td>
            <td align="right">@string.Format("{0:N0}", Model.BCountUpRj)</td>
            <td align="right">@string.Format("{0:N0}", Model.BSumUpRj)</td>

            <td class="bg-success">Recurring</td>
            <td align="right">@string.Format("{0:N0}", Model.BCountUpAp)</td>
            <td align="right">@string.Format("{0:N0}", Model.BSumUpAp)</td>
        </tr>
        <tr>
            <td class="bg-success">Billing Others</td>
            <td align="right">@string.Format("{0:N0}", Model.ACountDw)</td>
            <td align="right">@string.Format("{0:N0}", Model.ASumDw)</td>

            <td class="bg-success">Billing Others</td>
            <td align="right">@string.Format("{0:N0}", Model.ACountUp)</td>
            <td align="right">@string.Format("{0:N0}", Model.ASumUp)</td>

            <td class="bg-success">Billing Others</td>
            <td align="right">@string.Format("{0:N0}", Model.ACountUpRj)</td>
            <td align="right">@string.Format("{0:N0}", Model.ASumUpRj)</td>

            <td class="bg-success">Billing Others</td>
            <td align="right">@string.Format("{0:N0}", Model.ACountUpAp)</td>
            <td align="right">@string.Format("{0:N0}", Model.ASumUpAp)</td>
        </tr>
        <tr>
            <td class="bg-success">Quote</td>
            <td align="right">@string.Format("{0:N0}", Model.QCountDw)</td>
            <td align="right">@string.Format("{0:N0}", Model.QSumDw)</td>

            <td class="bg-success">Quote</td>
            <td align="right">@string.Format("{0:N0}", Model.QCountUp)</td>
            <td align="right">@string.Format("{0:N0}", Model.QSumUp)</td>

            <td class="bg-success">Quote</td>
            <td align="right">@string.Format("{0:N0}", Model.QCountUpRj)</td>
            <td align="right">@string.Format("{0:N0}", Model.QSumUpRj)</td>

            <td class="bg-success">Quote</td>
            <td align="right">@string.Format("{0:N0}", Model.QCountUpAp)</td>
            <td align="right">@string.Format("{0:N0}", Model.QSumUpAp)</td>
        </tr>
        <tr>
            <td class="bg-success">Total</td>
            <td align="right">@string.Format("{0:N0}", Model.TCountDownload)</td>
            <td align="right">@string.Format("{0:N0}", Model.TSumDownload)</td>

            <td class="bg-success">Total</td>
            <td align="right">@string.Format("{0:N0}", Model.CountUpload)</td>
            <td align="right">@string.Format("{0:N0}", Model.SumUpload)</td>

            <td class="bg-success">Total</td>
            <td align="right">@string.Format("{0:N0}", Model.CountReject)</td>
            <td align="right">@string.Format("{0:N0}", Model.SumReject)</td>

            <td class="bg-success">Total</td>
            <td align="right">@string.Format("{0:N0}", Model.CountApprove)</td>
            <td align="right">@string.Format("{0:N0}", Model.SumApprove)</td>
        </tr>
    </thead>
</table>


    @(Html
    .Grid(Model.StagingUploadVM)
    .Build(columns =>
    {
        columns.Add(model => model.id).Titled("ID").Filterable(false).Sortable(false);
        columns.Add(model => model.BillCode).Titled("BillCode").Filterable(false).Sortable(false);
        columns.Add(model => model.polisNo).Titled("PolisNo").Filterable(false).Sortable(false);
        columns.Add(model => model.tgl).Titled("tgl").Formatted("{0: yyyy-MM-dd hh:mm:ss}").Css("coldate").Filterable(false).Sortable(false);
        columns.Add(model => model.IsSuccess).Titled("IsSuccess").Filterable(false).Sortable(false);
        columns.Add(model => model.amount).Titled("Amount").Formatted("{0:N0}").Filterable(false).Sortable(false);

        columns.Add(model => "<a class='glyphicon glyphicon-stop'></a>").Titled("||").Encoded(false).Filterable(false).Sortable(false);

        columns.Add(model => model.BillingID).Titled("BillingID").Filterable(false).Sortable(false);
        columns.Add(model => model.ReqSeq).Titled("Seq").Filterable(false).Sortable(false);
        columns.Add(model => model.Due_Date_Pre).Titled("Due_Date_Pre").Formatted("{0: dd MMM yyyy}").Css("coldate").Filterable(false).Sortable(false);
        columns.Add(model => model.billAmount).Titled("billAmount").Formatted("{0:N0}").Filterable(false).Sortable(false);
    }).Empty("Data semua valid")
    .Pageable(pager =>
    {
        pager.PagesToDisplay = 0;
        pager.RowsPerPage = 100;
    })
    .Sortable()
    .Filterable()
    .Css("table-hover")
    )
    <form asp-action="SubmitUpload">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="trancode" />
        <input type="submit" value="Submit" class="btn btn-success" />
    </form>
